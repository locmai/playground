apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/config: 0d0bfc396e965bd1da68412d5d8110f08d7b5dfc5158c31fb0708043e0df01cb
    checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    checksum/secret: 5e976ade37886e2c27dfa09bdad4c55022270b9a68b5dc1471d5821513087755
    kubectl.kubernetes.io/default-container: grafana
  creationTimestamp: "2023-11-23T23:06:11Z"
  generateName: grafana-6c8bdcb979-
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
    pod-template-hash: 6c8bdcb979
  name: grafana-6c8bdcb979-pxcxn
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: grafana-6c8bdcb979
    uid: ba13d6b2-ac4d-4a6f-961a-256b228dc738
  resourceVersion: "874"
  uid: e1880b92-ac72-4eef-9d87-b5816078b9bc
spec:
  automountServiceAccountToken: true
  containers:
  - env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: GF_SECURITY_ADMIN_USER
      valueFrom:
        secretKeyRef:
          key: admin-user
          name: grafana
    - name: GF_SECURITY_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          key: admin-password
          name: grafana
    - name: GF_PATHS_DATA
      value: /var/lib/grafana/
    - name: GF_PATHS_LOGS
      value: /var/log/grafana
    - name: GF_PATHS_PLUGINS
      value: /var/lib/grafana/plugins
    - name: GF_PATHS_PROVISIONING
      value: /etc/grafana/provisioning
    image: docker.io/grafana/grafana:10.1.5
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 10
      httpGet:
        path: /api/health
        port: 3000
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    name: grafana
    ports:
    - containerPort: 3000
      name: grafana
      protocol: TCP
    - containerPort: 9094
      name: gossip-tcp
      protocol: TCP
    - containerPort: 9094
      name: gossip-udp
      protocol: UDP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /api/health
        port: 3000
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/grafana/grafana.ini
      name: config
      subPath: grafana.ini
    - mountPath: /var/lib/grafana
      name: storage
    - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
      name: config
      subPath: dashboardproviders.yaml
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxs8t
      readOnly: true
  - args:
    - --repo=https://github.com/locmai/humble-grafana-dashboards
    - --root=/var/lib/grafana/dashboards/next-gen
    - --period=30s
    - --sparse-checkout-file="_json"
    image: registry.k8s.io/git-sync/git-sync:v4.1.0
    imagePullPolicy: IfNotPresent
    name: git-sync-dashboard
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cxs8t
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: colima
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 472
    runAsGroup: 472
    runAsNonRoot: true
    runAsUser: 472
  serviceAccount: grafana
  serviceAccountName: grafana
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: grafana
    name: config
  - emptyDir: {}
    name: storage
  - emptyDir: {}
    name: nex-gen-dashboards
  - name: kube-api-access-cxs8t
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-11-23T23:06:11Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-11-23T23:06:11Z"
    message: 'containers with unready status: [git-sync-dashboard]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-11-23T23:06:11Z"
    message: 'containers with unready status: [git-sync-dashboard]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-11-23T23:06:11Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://6346f1deb31806d55ee0ca487cee8690d03e0497626ed9f2fc32a926f5676620
    image: registry.k8s.io/git-sync/git-sync:v4.1.0
    imageID: docker-pullable://registry.k8s.io/git-sync/git-sync@sha256:fd9722fd02e3a559fd6bb4427417c53892068f588fc8372aa553fbf2f05f9902
    lastState:
      terminated:
        containerID: docker://6346f1deb31806d55ee0ca487cee8690d03e0497626ed9f2fc32a926f5676620
        exitCode: 1
        finishedAt: "2023-11-23T23:08:12Z"
        reason: Error
        startedAt: "2023-11-23T23:08:12Z"
    name: git-sync-dashboard
    ready: false
    restartCount: 4
    started: false
    state:
      waiting:
        message: back-off 1m20s restarting failed container=git-sync-dashboard pod=grafana-6c8bdcb979-pxcxn_default(e1880b92-ac72-4eef-9d87-b5816078b9bc)
        reason: CrashLoopBackOff
  - containerID: docker://bd6e1e1265b88c82efa43d645e5f76925e5dc35a6ae630d0717eb6105118abb9
    image: grafana/grafana:10.1.5
    imageID: docker-pullable://grafana/grafana@sha256:0679e877ba204cede473782d5aba962831a3449092da120aba7d24082efe3fde
    lastState: {}
    name: grafana
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-11-23T23:06:25Z"
  hostIP: 192.168.5.15
  phase: Running
  podIP: 10.42.0.5
  podIPs:
  - ip: 10.42.0.5
  qosClass: BestEffort
  startTime: "2023-11-23T23:06:11Z"
